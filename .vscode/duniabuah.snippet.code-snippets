{
	"Flutter StatelessView": {
		"scope": "dart",
		"prefix": "stlv",
		"body": [
			"import 'package:smartfarm/repositories.dart';",
			"",
			"class ${1:MyWidget} extends StatelessWidget {",
			"\tconst ${1:MyWidget}({super.key});",
			"",
			"\t@override",
			"\tWidget build(BuildContext context) {",
			"\t\treturn MVVM<${3:ViewModel}>(",
			"\t\t\tview: () => const _${2:View}(),",
			"\t\t\tviewModel: ${3:ViewModel}(),",
			"\t\t);",
			"\t}",
			"}",
			"class _${2:View} extends StatelessView<${3:ViewModel}> {",
			"\tconst _${2:View}({key}) : super(key: key, reactive: true);",
			"",
			"\t@override",
			"\tWidget render(context, viewModel) {",
			"\t\treturn Scaffold();",
			"\t}",
			"}",
		],
		"description": "Create Flutter StatelessView<ViewModel>"
	},
	"Flutter ViewModel": {
		"scope": "dart",
		"prefix": "viewmodel",
		"body": [
			"import 'package:smartfarm/repositories.dart';",
			"",
			"class ${1:Name}ViewModel extends ViewModel {",
			"",
			"\t/// A callback after the MVVM widget's initState is called.",
			"\t/// See also:",
			"\t/// * [onDependenciesChange], which is called when the MVVM widget's [didChangeDependencies]",
			"\t/// is called.",
			"\t@override",
			"\tvoid init() {}",
			"",
			"\t/// A callback when the MVVM widget's [didChangeDependencies] is called.",
			"\t/// For example, when `context.fetch<T>(listen: true/false)` is used within the view model,",
			"\t/// then the [onDependenciesChange] method will be called every time these dependencies change.",
			"\t@override",
			"\tvoid onDependenciesChange() {}",
			"",
			"\t/// A callback when the `build` method of the view is called.",
			"\t@override",
			"\tvoid onBuild() {}",
			"",
			"\t/// A callback when the view is mounted.",
			"\t@override",
			"\tvoid onMount() {}",
			"",
			"\t/// A callback when the view is unmounted",
			"\t@override",
			"\tvoid onUnmount() {}",
			"",
			"\t/// Event callback when the application is visible and responding to user input.",
			"\t@override",
			"\tvoid onResume() {}",
			"",
			"\t/// Event callback when the application is not currently visible to the user, not responding to",
			"\t/// user input, and running in the background.",
			"\t@override",
			"\tvoid onPause() {}",
			"",
			"\t/// Event callback when the application is in an inactive state and is not receiving user input.",
			"\t/// For [IOS] only.",
			"\t@override",
			"\tvoid onInactive() {}",
			"",
			"\t/// Event callback when the application is still hosted on a flutter engine but",
			"\t/// is detached from any host views.",
			"\t/// For [Android] only.",
			"\t@override",
			"\tvoid onDetach() {}",
			"}"
		],
		"description": "Create Flutter ViewModel"
	}
}